---
import Toast from "./Toast"
---
<form
  id="emailForm"
  method="post"
  class="w-full max-w-xl mx-auto flex flex-col md:flex-row justify-center items-center bg-transparent md:bg-white p-5 md:p-3 rounded-lg md:rounded-full shadow-lg"
>
  <!-- Campo de correo -->
    <input
        type="email"
        name="email"
        placeholder="Ingresa tu correo"
        required
        class="rounded-md p-3 w-full mb-4 md:mb-0 md:mr-3 outline-none border-gray-300 focus:ring-2 focus:ring-[#6241A0] focus:border-transparent md:focus:ring-0 md:focus:border-gray-300"
    />

    <!-- Botón de envío -->
    <button
        type="submit"
        class="w-full md:w-auto md:text-nowrap flex justify-center items-center h-auto bg-[#6241A0] text-white shadow-lg py-3 px-5 rounded-full hover:scale-105 transition-transform duration-300"
    >
        <span class="hidden md:block">Quiero Acceso Prioritario</span>
        <span class="block md:hidden">Registrarme</span>
    </button>
</form>
<!-- <Toast message="Correo registrado con éxito!" duration={3000} /> -->
<script>
    const form = document.getElementById('emailForm') as HTMLFormElement;
    const endpoint =
      'https://script.google.com/macros/s/AKfycbzBH6fpmI_xI7Keu9X1hvMn0vKeyyvcq9Mnid_dTY5reS0622lYpPxqWquwPaLpFvTY/exec';
  
    // Función para mostrar el toast
    const showToast = (message: any, duration = 3000) => {
      const toast = document.createElement('div');
      toast.textContent = message;
      toast.className =
        'fixed top-5 right-5 bg-green-500 text-white py-2 px-4 rounded shadow-lg transition-opacity duration-300 opacity-0';
      document.body.appendChild(toast);
  
      // Mostrar el toast
      setTimeout(() => {
        toast.classList.add('opacity-100');
      }, 10);
  
      // Ocultar el toast después del tiempo especificado
      setTimeout(() => {
        toast.classList.remove('opacity-100');
        setTimeout(() => {
          toast.remove();
        }, 300);
      }, duration);
    };
  
    form?.addEventListener('submit', async (event) => {
      event.preventDefault();
  
      const email = form.email.value;
  
      try {
        const response = await fetch(endpoint, {
          method: 'POST',
          mode: 'no-cors',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ email }),
        });
        
        form.reset();
        showToast('Registro exitoso');
      } catch (error) {
        showToast('Error al conectar con el servidor', 5000); // Mostrará un toast de error
        console.error('Error:', error);
      }
    });
</script>
  
<!-- <script>
    const form = document.getElementById('emailForm') as HTMLFormElement;
    const endpoint = 'https://script.google.com/macros/s/AKfycbzBH6fpmI_xI7Keu9X1hvMn0vKeyyvcq9Mnid_dTY5reS0622lYpPxqWquwPaLpFvTY/exec';

    form?.addEventListener('submit', async (event) => {
        event.preventDefault();

        const email = form.email.value;

        try {
            const response = await fetch(endpoint, {
                method: 'POST',
                mode: 'no-cors',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ email }),
            });

            alert("Registro exitóso");
        } catch (error) {
            alert('Error al conectar con el servidor.');
            console.error('Error:', error);
        }
    });
</script> -->